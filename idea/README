
	IDEA encryption plugin for irssi 
	version 0.1.4
	by Heikki Hannikainen <hessu@hes.iki.fi>
	irssi API rewrite by Pekka Aleksi Knuutila <zur@edu.lahti.fi>
	several fixes by Timo Sirainen <tss@iki.fi>

	http://www.inside.org/~zur/irssi-idea/
	
	This product includes software developed by
	Timo J. Rinne <tri@iki.fi> and contributors.

** Licensing: **

  The IRC IDEA encryption library which actually does all the real work
  written by Timo J. Rinne <tri@iki.fi> and contributors. Check
  src/README.irc_crypt, src/COPYRIGHT.irc_crypt and the source files for the
  licenses and copyright notices of those parts.
  
  The plugin wrapper is under the GPL, see COPYING. The IDEA library is not!
  
  The IDEA algorithm is patented in many countries, and the patent holder
  disallows commercial use (in which case you need to obtain a license).
  
  This is strong crypto, and might be illegal to use or import/export
  in some fascist countries. Check your local regulations!

** Installation: **

  You need to have to have irssi version 0.7.98.3 (minimum) installed.
  
     $ ./configure --with-irssi=/usr/src/irssi-0.7.98.3
     $ make
     # make install
  
  Only the 'make install' needs to be run as root.
  Read the INSTALL file for some more of generic autoconf documentation.

  irssi-idea versions prior to 0.1.3 work with older versions of irssi.
  
** Short usage instructions: **
  
  Naturally, you must load the plugin using "/load idea".
  
  There are two kinds of keys, "default" and "known" keys. Default keys 
are used for 1) encryption to a known destination and 2) decryption. Known
keys are only used for decryption.

  All keys (both default and known) are put into a ring of decryption keys.
For each received encrypted message, the correct decryption key is
automatically chosen.

  You must specify a default key for each destination (each channel and
each user you are going to send encrypted /msg's to).

  The syntax for adding a key is:

     /key add [<destination>] <key>
  
  for example:
  
     /key add #channel thisisasecretkey

  or, for an user:
  
     /key add myfriend thisisanothersecretkey
  
  If you don't specify a destination, the key will be added as the
default key for the current window's destination (ie. the current channel,
or the recipient of the /msg chat window). So usually you'll only need to do:

     /key add thisiskeyforthiswindow
  
  If you want to add a decryption key which will only be used for decryption,
you'll want to add a known key:

     /key add known thisisanoldkey

  You can remove keys from the keyring using /key drop.

  To send an encrypted message for the current window:

     /idea this message will be sent encrypted
  
  To send an encrypted message for to another user or channel (/msg):
  
     /ideam myfriend message
     /ideam #anotherchannel message

  You can also set idea_autocrypt (ON by default), in which case all
  messages will be encrypted if the target has a designated default key.
  
  If the setting idea_formats is on, successfully decrypted/encrypted
  messages are written to the screen in blue. 

  In case you don't have the correct decryption key in your ring, you get
  a warning and see the ciphertext:
  
     -!- Irssi: Decryption error: Unknown key
     <friend> |*E*|IDEA|3.0|fccbmrlfiiiqksdr|1j3kB273v13QHMWKPz4vIYMMJPQJq6W3wtL5cR+vBS9lOdSGhRlFN5lzb4O29fnT|
  
  If you try to send an encrypted message, but haven't defined a key for
  the destination, the error message is:
 
     -!- Irssi: IDEA encryption failed! Perhaps no key set for "friend"?
  
** TODO: **

   IDEA support for CTCP, DCC and friends.
   Optional saving of keys to a configuration file through libPropList.
   Check the timestamp difference.
   Check for nick mismatch.
   If the encrypted string is too long to be sent to the server,
   split the unencrypted string so that it fits.

** Bugs: **

   None known.


